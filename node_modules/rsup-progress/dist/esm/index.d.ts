interface Options {
    maxWidth?: number | string;
    height?: number | string;
    duration?: number;
    hideDuration?: number;
    zIndex?: number | string;
    className?: string;
    color?: string;
    timing?: string;
    position?: 'top' | 'bottom' | 'none';
    container?: HTMLElement;
}
export declare class Progress {
    private _el;
    private _state;
    private _opts;
    private _rafId;
    private _timerId;
    private _promises;
    private _delayTimers;
    constructor(opts?: Options);
    setOptions(opts: Options): void;
    private _css;
    get isInProgress(): boolean;
    start(): void;
    end(immediately?: boolean): void;
    promise<T>(p: Promise<T>, { delay, min }?: {
        delay?: number;
        min?: number;
    }): Promise<T>;
}
export {};
